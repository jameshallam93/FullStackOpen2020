{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","handleDelete","label","important","className","content","onClick","Notification","message","console","log","baseUrl","Axios","get","then","response","data","newObject","post","id","put","delete","App","notes","useState","newNote","setNewNote","notez","setNotes","showAll","setShowAll","errorMessage","setMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","returnedNote","catch","error","setTimeout","n","onSubmit","event","preventDefault","target","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54c74516.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Note = ({note, toggleImportance, handleDelete}) =>{\r\n\r\n  const label = note.important ?\r\n  \"make not important\" : \"make important\"\r\n\r\n\r\n  return(\r\n    <>\r\n      <li className = \"note\">{note.content}</li>\r\n      <button onClick = {toggleImportance}>{label}</button>\r\n      <button onClick = {handleDelete}>Delete </button>\r\n    </>\r\n  )\r\n}\r\nexport default Note","const Notification = ({message}) =>{\r\n    if (message === null){\r\n        return null\r\n    }else{\r\n        console.log(message)\r\n        return(\r\n            <div className = \"error\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Notification","import Axios from \"axios\"\r\n\r\nconst baseUrl = \"/api/notes\"\r\n\r\nconst getAll=() =>{\r\n    const request =  Axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\nconst create = (newObject) =>{\r\n    const request =  Axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\nconst update = (id, newObject) =>{\r\n\r\n    const request =  Axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) =>{\r\n    Axios.delete(`${baseUrl}/${id}`)\r\n\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect }  from 'react'\r\nimport Note from './components/Note.js';\r\nimport Notification from \"./components/Notification\"\r\nimport noteService from \"./services/notes\"\r\n\r\nconst App = ({notes}) => {\r\n\r\n\r\n  const [newNote, setNewNote] = useState(\r\n    \"a new note..\"\r\n  )  \r\n  const [notez, setNotes] = useState([])\r\n  \r\n  const [showAll, setShowAll] = useState(true)\r\n\r\n  const [errorMessage, setMessage] = useState(null)\r\n\r\n\r\n  useEffect(()=>{\r\n    noteService.getAll()\r\n    .then(initialNotes =>{\r\n      setNotes(initialNotes)\r\n    }\r\n    )\r\n  }\r\n  ,[])\r\n  \r\n  const notesToShow = (showAll ?\r\n    notez:\r\n    notez.filter(note =>\r\n      note.important === true))\r\n    \r\n\r\n  \r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    console.log(\"button pressed\", event.target)\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important : Math.random() < 0.5,\r\n    }\r\n    noteService.create(noteObject)\r\n    .then(returnedNote =>{\r\n      setNotes(notez.concat(returnedNote))\r\n    })\r\n\r\n  }\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n\r\n  }\r\n  const handleDelete = id =>{\r\n\r\n    noteService.remove(id)\r\n    setNotes(notez.filter(note => note.id !== id))\r\n  }\r\n\r\n  const toggleImportance = id =>{\r\n\r\n    const note = notez.find(note => note.id === id)\r\n    const newNote = {...note, important : !note.important}\r\n    noteService.update(id, newNote)\r\n    .then(returnedNote =>{\r\n      setNotes(notez.map(note => note.id !== id ? note : returnedNote))\r\n    }).then(console.log(`Note importance now set to ${note.important}`))\r\n    .catch(error => {\r\n      setMessage(`Error: ${error} : ${note.content} was already deleted`)\r\n      setTimeout(() =>{setMessage(null)}, 5000)\r\n      setNotes(notes.filter(n => n.id !== id))\r\n  })\r\n    \r\n  }\r\n\r\n  return(\r\n\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message = {errorMessage}/>\r\n      <button onClick =\r\n       {() => setShowAll(!showAll)}\r\n       >Show {showAll ? \"important\" : \"all\" }\r\n       </button>\r\n\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n          <Note note = {note} key = {note.id} handleDelete = {() =>handleDelete(note.id)} toggleImportance = {() => toggleImportance(note.id)}/>\r\n        )}\r\n      </ul>\r\n\r\n      <form onSubmit = {addNote}>\r\n        <input value = {newNote}\r\n        onChange = {handleNoteChange}>\r\n        </input>\r\n        <button type = \"submit\">save</button>\r\n      </form>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n  export default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport \"./index.css\"\n\n\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n  \n\n\n"],"sourceRoot":""}