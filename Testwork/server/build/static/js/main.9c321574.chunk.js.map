{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","console","log","baseUrl","Axios","get","then","response","data","newObject","post","id","put","App","notes","useState","newNote","setNewNote","notez","setNotes","showAll","setShowAll","errorMessage","setMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","returnedNote","catch","error","setTimeout","n","onSubmit","event","preventDefault","target","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAgBeA,EAbF,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,iBAEbC,EAAQF,EAAKG,UACnB,qBAAuB,iBAGvB,OACE,qCACE,oBAAIC,UAAY,OAAhB,SAAwBJ,EAAKK,UAC7B,wBAAQC,QAAWL,EAAnB,SAAsCC,QCA7BK,EAZM,SAAC,GAAc,IAAbC,EAAY,EAAZA,QACnB,OAAgB,OAAZA,EACO,MAEPC,QAAQC,IAAIF,GAER,qBAAKJ,UAAY,QAAjB,SACKI,M,gBCLXG,EAAU,aAiBD,EAfF,WAET,OADiBC,IAAMC,IAAIF,GACZG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAXA,SAACC,GAEZ,OADiBL,IAAMM,KAAKP,EAASM,GACtBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS9B,EAPA,SAACG,EAAIF,GAGhB,OADiBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAChCH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCmF5BK,EA7FL,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EAGOC,mBAC5B,gBAJqB,mBAGhBC,EAHgB,KAGPC,EAHO,OAMGF,mBAAS,IANZ,mBAMhBG,EANgB,KAMTC,EANS,OAQOJ,oBAAS,GARhB,mBAQhBK,EARgB,KAQPC,EARO,OAUYN,mBAAS,MAVrB,mBAUhBO,EAVgB,KAUFC,EAVE,KAavBC,qBAAU,WACRC,IACCnB,MAAK,SAAAoB,GACJP,EAASO,QAIZ,IAED,IAAMC,EAAeP,EACnBF,EACAA,EAAMU,QAAO,SAAApC,GAAI,OACI,IAAnBA,EAAKG,aAwCT,OAEE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAAWsB,IACzB,yBAAQxB,QACN,kBAAMuB,GAAYD,IADpB,kBAEQA,EAAU,YAAc,SAGhC,6BACGO,EAAYE,KAAI,SAAArC,GAAI,OACnB,cAAC,EAAD,CAAMA,KAAQA,EAAsBC,iBAAoB,kBA5BvC,SAAAkB,GAEvB,IAAMnB,EAAO0B,EAAMY,MAAK,SAAAtC,GAAI,OAAIA,EAAKmB,KAAOA,KACtCK,EAAO,2BAAOxB,GAAP,IAAaG,WAAaH,EAAKG,YAC5C8B,EAAmBd,EAAIK,GACtBV,MAAK,SAAAyB,GACJZ,EAASD,EAAMW,KAAI,SAAArC,GAAI,OAAIA,EAAKmB,KAAOA,EAAKnB,EAAOuC,SAClDzB,KAAKL,QAAQC,IAAR,qCAA0CV,EAAKG,aACtDqC,OAAM,SAAAC,GACLV,EAAW,UAAD,OAAWU,EAAX,cAAsBzC,EAAKK,QAA3B,yBACVqC,YAAW,WAAMX,EAAW,QAAQ,KACpCJ,EAASL,EAAMc,QAAO,SAAAO,GAAC,OAAIA,EAAExB,KAAOA,SAiB8BlB,CAAiBD,EAAKmB,MAAzDnB,EAAKmB,SAIpC,uBAAMyB,SApDM,SAACC,GACfA,EAAMC,iBACNrC,QAAQC,IAAI,iBAAkBmC,EAAME,QACpC,IAAMC,EAAa,CACjB3C,QAASmB,EACTyB,MAAM,IAAIC,MAAOC,cACjBhD,UAAYiD,KAAKC,SAAW,IAE9BpB,EAAmBe,GAClBlC,MAAK,SAAAyB,GACJZ,EAASD,EAAM4B,OAAOf,QA0CtB,UACE,uBAAOgB,MAAS/B,EAChBgC,SAxCmB,SAACX,GACxBpC,QAAQC,IAAImC,EAAME,OAAOQ,OACzB9B,EAAWoB,EAAME,OAAOQ,UAwCpB,wBAAQE,KAAO,SAAf,yB,MCnFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9c321574.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Note = ({note, toggleImportance}) =>{\r\n\r\n  const label = note.important ?\r\n  \"make not important\" : \"make important\"\r\n\r\n\r\n  return(\r\n    <>\r\n      <li className = \"note\">{note.content}</li>\r\n      <button onClick = {toggleImportance}>{label}</button>\r\n    </>\r\n  )\r\n}\r\nexport default Note","const Notification = ({message}) =>{\r\n    if (message === null){\r\n        return null\r\n    }else{\r\n        console.log(message)\r\n        return(\r\n            <div className = \"error\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Notification","import Axios from \"axios\"\r\n\r\nconst baseUrl = \"/api/notes\"\r\n\r\nconst getAll=() =>{\r\n    const request =  Axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\nconst create = (newObject) =>{\r\n    const request =  Axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\nconst update = (id, newObject) =>{\r\n\r\n    const request =  Axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect }  from 'react'\r\nimport Note from './components/Note.js';\r\nimport Notification from \"./components/Notification\"\r\nimport noteService from \"./services/notes\"\r\n\r\nconst App = ({notes}) => {\r\n\r\n\r\n  const [newNote, setNewNote] = useState(\r\n    \"a new note..\"\r\n  )  \r\n  const [notez, setNotes] = useState([])\r\n  \r\n  const [showAll, setShowAll] = useState(true)\r\n\r\n  const [errorMessage, setMessage] = useState(null)\r\n\r\n\r\n  useEffect(()=>{\r\n    noteService.getAll()\r\n    .then(initialNotes =>{\r\n      setNotes(initialNotes)\r\n    }\r\n    )\r\n  }\r\n  ,[])\r\n  \r\n  const notesToShow = (showAll ?\r\n    notez:\r\n    notez.filter(note =>\r\n      note.important === true))\r\n    \r\n\r\n  \r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    console.log(\"button pressed\", event.target)\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important : Math.random() < 0.5,\r\n    }\r\n    noteService.create(noteObject)\r\n    .then(returnedNote =>{\r\n      setNotes(notez.concat(returnedNote))\r\n    })\r\n\r\n  }\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n\r\n  }\r\n\r\n  const toggleImportance = id =>{\r\n\r\n    const note = notez.find(note => note.id === id)\r\n    const newNote = {...note, important : !note.important}\r\n    noteService.update(id, newNote)\r\n    .then(returnedNote =>{\r\n      setNotes(notez.map(note => note.id !== id ? note : returnedNote))\r\n    }).then(console.log(`Note importance now set to ${note.important}`))\r\n    .catch(error => {\r\n      setMessage(`Error: ${error} : ${note.content} was already deleted`)\r\n      setTimeout(() =>{setMessage(null)}, 5000)\r\n      setNotes(notes.filter(n => n.id !== id))\r\n  })\r\n    \r\n  }\r\n\r\n  return(\r\n\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message = {errorMessage}/>\r\n      <button onClick =\r\n       {() => setShowAll(!showAll)}\r\n       >Show {showAll ? \"important\" : \"all\" }\r\n       </button>\r\n\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n          <Note note = {note} key = {note.id} toggleImportance = {() => toggleImportance(note.id)}/>\r\n        )}\r\n      </ul>\r\n\r\n      <form onSubmit = {addNote}>\r\n        <input value = {newNote}\r\n        onChange = {handleNoteChange}>\r\n        </input>\r\n        <button type = \"submit\">save</button>\r\n      </form>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n  export default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport \"./index.css\"\n\n\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n  \n\n\n"],"sourceRoot":""}